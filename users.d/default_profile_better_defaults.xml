<clickhouse>
  <profiles>
    <default>
      <!-- it may cause a lot of issues-->
      <prefer_localhost_replica>0</prefer_localhost_replica>

      <cancel_http_readonly_queries_on_client_close>1</cancel_http_readonly_queries_on_client_close>

      <use_hedged_requests>0</use_hedged_requests>

      <!-- less surprises -->
      <insert_distributed_sync>1</insert_distributed_sync>

      <max_memory_usage>10000000000</max_memory_usage>
      <max_bytes_before_external_group_by>7500000000</max_bytes_before_external_group_by>
      <max_bytes_before_external_sort>7500000000</max_bytes_before_external_sort>

      <max_concurrent_queries_for_user>850</max_concurrent_queries_for_user>
      <max_concurrent_queries_for_all_users>950</max_concurrent_queries_for_all_users>

      <!-- improve performance when applicable -->   
      <parallel_view_processing>1</parallel_view_processing>
      <do_not_merge_across_partitions_select_final>1</do_not_merge_across_partitions_select_final>

      <!-- durability
      <insert_quorum>auto</insert_quorum>
      -->

      <!-- frequent inserts:
      <async_inserts>1</async_inserts>
      -->

      <!-- bit slower but uses less ram -->
<!--       <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient> -->

      <!-- if you have more than 16 cores, and concurrent load, the more concurrent the load is the less concurreny in the scope of singe query should be used -->
      <!-- <max_threads>16</max_threads> -->

      <!-- for fast disks and high concurrency (sympthoms: high AsynchronousReadWaitMicroseconds with low IOWait) -->
      <!-- <local_filesystem_read_methos>pread</local_filesystem_read_methos> -->

      <!-- connectivity to other nodes -->
<!--       <load_balancing>nearest_hostname</load_balancing>
      <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms> -->
    
    </default>
  </profiles>
</clickhouse>
